回顾:
1.变量:存数的
    int a;  int b,c;
	int a=250; int a; a=250;
	int b=a+10; System.out.println(a);
	a=a+10; //在a本身基础之上增10
2.基本数据类型:
  1)int:整型，4个，5,25,250...
  2)long:长整型，8个，5L,250L,10000000000L...
  3)double:浮点型，8个，3.14,56.89,5.0...
  4)boolean:布尔型，1个，true,false
  5)char:字符型，2个，'你','a','6',' '...
3.基本数据类型间的转换:
  1)自动:小到大
    强制:大到小 (要转换为的数据类型)变量
  2)byte b1=5,b2=6;
    byte b3=(byte)(b1+b2);
4.Scanner的用法:
   import java.util.Scanner;
   Scanner scan = new Scanner(System.in);
   System.out.println("请输入年龄:");
   int age = scan.nextInt();


笔记:
1.运算符:
  1)算术运算符:+-*/%,++,--
  2)关系运算符:>,<,>=,<=,==,!= boolean
  3)逻辑运算符:&&,||,! boolean
  4)赋值运算符:=,+=,-=,*=,/=,%=
  5)字符串连接运算符:+
  6)三目/条件运算符:boolean?数1:数2
2.分支结构:
  1)if结构:1条路
  2)if...else结构:2条路
  3)if...else if结构:多条路
  4)switch...case结构:多条路
    优点:效率高、结构清晰
	缺点:整数、相等
	break:跳出switch


练习:
1)完成课后作业的所有题目(编码题5道)
2)练习经典案例:
  2.1)AgeRange年龄判断程序
  2.2)LeapYear闰年判断程序
  2.3)Cashier柜台收银程序
  2.4)ScoreLevel成绩等级判断
  2.5)CommandBySwitch命令解析程序
3)练习OperDemo运算符------选做(最好做)














int a=5,b=8;
int max = a>b?a:b;

if(a>b){
  max=a;
}else{
  max=b;
}











当缺点不再是缺点的时候，就只剩下优点了-----首选





if(num==1){
  111
}else if(num==2){
  222
}else if(num==3){
  333
}else{
  666
}













int num = 5;
if(num>0){
  正数
}else if(num<0){
  负数
}else{
  0
}



if(score>=0 && score<=100){
	if(score>=90){
		System.out.println("A-优秀");
	}else if(score>=80){
		System.out.println("B-良好");
	}else if(score>=60){
		System.out.println("C-中等");
	}else{
		System.out.println("D-不及格");
	}
}else{
	System.out.println("成绩不合法");
}











A:成绩大于等于90
B:成绩大于等于80并且小于90
C:成绩大于等于60并且小于80
D:成绩小于60


1)ABCD四个档，只有可能走其中之一
2)若没有最后的else，ABC三个档并非必走其中之一
3)若有最后的else，ABCD四个档必走其中之一

int score = 45;
if(score>=90){
  A-优秀
}else if(score>=80){
  B-良好
}else if(score>=60){
  C-中等
}else{
  D-不及格
}











int score = 95;
if(score>=90){ //可读性差
  A-优秀
}else{
  if(score>=80 && score<90){
    B-良好
  }else{
    if(score>=60 && score<80){
	  C-中等
	}else{
	  if(score<60){
	    D-不及格
	  }
	}
  }
}
















奇数、偶数-------------2路
正数、负数、0----------3路




钱够-----------找零并输出
钱不够---------给错误提示
















满足条件就干事，不满足条件就不干事------if

满足条件就干事，不满足条件干另一个事----if...else


满500打8折，不满500不打折--------if
满500打8折，不满500打9折---------if...else











任何复杂的程序逻辑都可以通过三种结构来实现:
1)顺序结构:从上往下逐行执行，每句必走
2)分支结构:有条件的执行某语句，并非每句必走
3)循环结构:























闰年的判断公式:
1)能被4整除，并且，不能被100整除
或者
2)能被400整除


1)year%4==0 && year%100!=0
  ||
2)year%400==0



(year%4==0 && year%100!=0) || year%400==0


2004是闰年
2000是闰年
2001不是闰年
















char为字符，放单引号中，只能有1个
String为字符串，放双引号中，0个到多个



System.out.println("HelloWorld");














age>=18
&&
age<=50

25--true
10--false
88--false


25--true
10--true
88--true

















!        false  true
下雨了?  true   false

能结账吗?    true   true   true  false
1)有现金吗?  true   false  true  false
或者--||
2)有卡吗?    false  true   true  false

能毕业吗?         false  false  false  true
1)考试及格吗?     true   false  false  true
并且--&&
2)出勤率够80%吗?  false  true   false  true

















若想干某件事是由一个条件控制的--------------关系运算
   成绩>=60

若想干某件事是由多个条件控制的--------------逻辑运算
   成绩>=60 并且 出勤率>=80%


















我的年龄大于你的年龄-------------------对/错
        >,<

我的体重小于或等于你的体重-------------对/错
        <=,>=

我的身高等于你的身高-------------------对/错
        ==,!=

















